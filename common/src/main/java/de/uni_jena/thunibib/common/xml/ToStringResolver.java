package de.uni_jena.thunibib.common.xml;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.jdom2.Document;
import org.jdom2.Element;
import org.jdom2.JDOMException;
import org.jdom2.input.SAXBuilder;
import org.jdom2.output.Format;
import org.jdom2.output.XMLOutputter;
import org.jdom2.transform.JDOMSource;
import org.mycore.common.xml.MCRURIResolver;
import org.mycore.common.xsl.MCRLazyStreamSource;

import javax.xml.transform.Source;
import javax.xml.transform.TransformerException;
import javax.xml.transform.URIResolver;
import java.io.IOException;
import java.io.InputStream;

/**
 * {@link URIResolver} for transforming arbitrary {@link Source} to string.
 *
 * @author shermann (Silvio Hermann)
 */
public class ToStringResolver implements URIResolver {

    private static final Logger LOGGER = LogManager.getLogger();

    /**
     * This {@link URIResolver} transforms the result of arbitrary {@link MCRURIResolver}s to string.
     * This allows to embedd other xml documents or text generated by a {@link MCRURIResolver} in xslt stylesheets.
     *
     * @param href <code>toString:&lt;any other mycore uri&gt;</code>
     * @param base set to <code>null</code>
     *
     * @return a {@link JDOMSource}, the String content can be obtained by the xpath <code>./str</code>
     * @throws TransformerException
     */
    @Override
    public Source resolve(String href, String base) throws TransformerException {
        String subURI = href.substring(href.indexOf(":") + 1);
        MCRLazyStreamSource source = (MCRLazyStreamSource) MCRURIResolver.instance().resolve(subURI, null);
        String content = null;
        try (InputStream is = source.getInputStream()) {
            try {
                SAXBuilder saxBuilder = new SAXBuilder();
                content = new XMLOutputter(Format.getCompactFormat()).outputString(saxBuilder.build(is));
            } catch (JDOMException | IOException e) {
                LOGGER.debug("Could not read source as xml for uri {}", href);
            }

            if (content == null) {
                is.reset();
                content = new String(is.readAllBytes());
            }
            return new JDOMSource(new Document(new Element("str").addContent(content)));
        } catch (IOException e) {
            throw new TransformerException(e);
        }
    }
}
